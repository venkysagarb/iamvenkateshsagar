name: "CI/CD: React to S3 plus CloudFront (OIDC Secure)"
on:
  push:
    branches:
      - main
      - staging

env:
  AWS_REGION: ap-south-1

jobs:
  deploy:
    runs-on: ubuntu-latest

    # CRITICAL: Add permissions for OIDC token
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Build React App
        run: npm run build

      - name: Print GitHub context
        run: |
          echo "Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"

      - name: Debug OIDC Token Presence
        run: |
          echo "Token available: ${{ env.ACTIONS_ID_TOKEN_REQUEST_TOKEN != '' }}"
          echo "URL available: ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL != '' }}"

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::455037549316:role/GithubOIDCDeployRole
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com
          role-session-name: github-session

      - name: Deploy to S3 bucket
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            BUCKET=venkatesh-portfolio-app
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            BUCKET=staging.iamvenkateshsagar.in
          fi
          echo "Deploying to S3 bucket: $BUCKET"

          # Check if BUCKET is empty
          if [[ -z "$BUCKET" ]]; then
            echo "ERROR: S3 bucket name is empty. Please check your branch configuration."
            exit 1
          fi

          aws s3 sync build/ s3://$BUCKET --delete

      - name: Invalidate CloudFront Cache
        env:
          CLOUDFRONT_PROD_ID: ${{ secrets.CLOUDFRONT_PROD_ID }}
          CLOUDFRONT_STAGING_ID: ${{ secrets.CLOUDFRONT_STAGING_ID }}
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            DIST_ID="$CLOUDFRONT_PROD_ID"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            DIST_ID="$CLOUDFRONT_STAGING_ID"
          fi
          echo "Invalidating CloudFront distribution: $DIST_ID"

          # Check if DIST_ID is empty
          if [[ -z "$DIST_ID" ]]; then
            echo "ERROR: Distribution ID is empty. Please check your GitHub secrets."
            echo "Required secrets: CLOUDFRONT_PROD_ID, CLOUDFRONT_STAGING_ID"
            exit 1
          fi

          aws cloudfront create-invalidation --distribution-id "$DIST_ID" --paths "/*"
